<template name="REMAX_TPL">
  <block tt:for="{{tree.root.children}}" tt:key="{{id}}">
    <template is="{{'REMAX_TPL_' + item.type}}" data="{{i: item}}" />
  </block>
</template>


  

<template name="REMAX_TPL_view">
  <view  disable-scroll="{{i.props.disableScroll}}"  hover-class="{{i.props.hoverClass}}"  hover-start-time="{{i.props.hoverStartTime}}"  hover-stay-time="{{i.props.hoverStayTime}}"  hidden="{{i.props.hidden}}"  class="{{i.props.class}}"  style="{{i.props.style}}"  animation="{{i.props.animation}}"  hover-stop-propagation="{{i.props.hoverStopPropagation}}"  onTap="{{i.props.onTap}}"  onTouchStart="{{i.props.onTouchStart}}"  onTouchMove="{{i.props.onTouchMove}}"  onTouchEnd="{{i.props.onTouchEnd}}"  onTouchCancel="{{i.props.onTouchCancel}}"  onLongTap="{{i.props.onLongTap}}"  onTransitionEnd="{{i.props.onTransitionEnd}}"  onAnimationIteration="{{i.props.onAnimationIteration}}"  onAnimationStart="{{i.props.onAnimationStart}}"  onAnimationEnd="{{i.props.onAnimationEnd}}"  onAppear="{{i.props.onAppear}}"  onDisappear="{{i.props.onDisappear}}"  onFirstAppear="{{i.props.onFirstAppear}}" >
    
      <block tt:for="{{i.children}}" tt:key="{{id}}">
        <template is="{{'REMAX_TPL_' + item.type}}" data="{{i: item}}" />
      </block>
    
  </view>
</template>


  

<template name="REMAX_TPL_button">
  <button  class="{{i.props.class}}"  size="{{i.props.size}}"  type="{{i.props.type}}"  plain="{{i.props.plain}}"  disabled="{{i.props.disabled}}"  loading="{{i.props.loading}}"  hover-class="{{i.props.hoverClass}}"  hover-start-time="{{i.props.hoverStartTime}}"  hover-stay-time="{{i.props.hoverStayTime}}"  hover-stop-propagation="{{i.props.hoverStopPropagation}}"  form-type="{{i.props.formType}}"  open-type="{{i.props.openType}}"  scope="{{i.props.scope}}"  onTap="{{i.props.onTap}}"  app-parameter="{{i.props.appParameter}}"  public-id="{{i.props.publicId}}" >
    
      <block tt:for="{{i.children}}" tt:key="{{id}}">
        <template is="{{'REMAX_TPL_' + item.type}}" data="{{i: item}}" />
      </block>
    
  </button>
</template>


  

<template name="REMAX_TPL_canvas">
  <canvas  id="{{i.props.id}}"  style="{{i.props.style}}"  class="{{i.props.class}}"  width="{{i.props.width}}"  height="{{i.props.height}}"  disable-scroll="{{i.props.disableScroll}}"  onTap="{{i.props.onTap}}"  onTouchStart="{{i.props.onTouchStart}}"  onTouchMove="{{i.props.onTouchMove}}"  onTouchEnd="{{i.props.onTouchEnd}}"  onTouchCancel="{{i.props.onTouchCancel}}"  onLongTap="{{i.props.onLongTap}}" >
    
      <block tt:for="{{i.children}}" tt:key="{{id}}">
        <template is="{{'REMAX_TPL_' + item.type}}" data="{{i: item}}" />
      </block>
    
  </canvas>
</template>


  

<template name="REMAX_TPL_checkbox-group">
  <checkbox-group  class="{{i.props.class}}"  style="{{i.props.style}}"  name="{{i.props.name}}"  onChange="{{i.props.onChange}}" >
    
      <block tt:for="{{i.children}}" tt:key="{{id}}">
        <template is="{{'REMAX_TPL_' + item.type}}" data="{{i: item}}" />
      </block>
    
  </checkbox-group>
</template>


  

<template name="REMAX_TPL_checkbox">
  <checkbox  class="{{i.props.class}}"  style="{{i.props.style}}"  value="{{i.props.value}}"  checked="{{i.props.checked}}"  disabled="{{i.props.disabled}}"  onChange="{{i.props.onChange}}"  color="{{i.props.color}}" >
    
      <block tt:for="{{i.children}}" tt:key="{{id}}">
        <template is="{{'REMAX_TPL_' + item.type}}" data="{{i: item}}" />
      </block>
    
  </checkbox>
</template>


  

<template name="REMAX_TPL_contact-button">
  <contact-button  class="{{i.props.class}}"  style="{{i.props.style}}"  tnt-inst-id="{{i.props.tntInstId}}"  scene="{{i.props.scene}}"  size="{{i.props.size}}"  color="{{i.props.color}}"  icon="{{i.props.icon}}"  alipay-card-no="{{i.props.alipayCardNo}}" >
    
      <block tt:for="{{i.children}}" tt:key="{{id}}">
        <template is="{{'REMAX_TPL_' + item.type}}" data="{{i: item}}" />
      </block>
    
  </contact-button>
</template>


  

<template name="REMAX_TPL_cover-image">
  <cover-image  class="{{i.props.class}}"  src="{{i.props.src}}"  style="{{i.props.style}}"  onTap="{{i.props.onTap}}" >
    
      <block tt:for="{{i.children}}" tt:key="{{id}}">
        <template is="{{'REMAX_TPL_' + item.type}}" data="{{i: item}}" />
      </block>
    
  </cover-image>
</template>


  

<template name="REMAX_TPL_cover-view">
  <cover-view  class="{{i.props.class}}"  style="{{i.props.style}}"  onTap="{{i.props.onTap}}" >
    
      <block tt:for="{{i.children}}" tt:key="{{id}}">
        <template is="{{'REMAX_TPL_' + item.type}}" data="{{i: item}}" />
      </block>
    
  </cover-view>
</template>


  

<template name="REMAX_TPL_form">
  <form  class="{{i.props.class}}"  style="{{i.props.style}}"  report-submit="{{i.props.reportSubmit}}"  onSubmit="{{i.props.onSubmit}}"  onReset="{{i.props.onReset}}" >
    
      <block tt:for="{{i.children}}" tt:key="{{id}}">
        <template is="{{'REMAX_TPL_' + item.type}}" data="{{i: item}}" />
      </block>
    
  </form>
</template>


  

<template name="REMAX_TPL_icon">
  <icon  class="{{i.props.class}}"  style="{{i.props.style}}"  type="{{i.props.type}}"  size="{{i.props.size}}"  color="{{i.props.color}}" >
    
      <block tt:for="{{i.children}}" tt:key="{{id}}">
        <template is="{{'REMAX_TPL_' + item.type}}" data="{{i: item}}" />
      </block>
    
  </icon>
</template>


  

<template name="REMAX_TPL_image">
  <image  src="{{i.props.src}}"  mode="{{i.props.mode}}"  class="{{i.props.class}}"  style="{{i.props.style}}"  lazy-load="{{i.props.lazyLoad}}"  onLoad="{{i.props.onLoad}}"  onError="{{i.props.onError}}"  onTap="{{i.props.onTap}}"  catchTap="{{i.props.catchTap}}" >
    
      <block tt:for="{{i.children}}" tt:key="{{id}}">
        <template is="{{'REMAX_TPL_' + item.type}}" data="{{i: item}}" />
      </block>
    
  </image>
</template>


  

<template name="REMAX_TPL_input">
  <input  class="{{i.props.class}}"  style="{{i.props.style}}"  value="{{i.props.value}}"  name="{{i.props.name}}"  type="{{i.props.type}}"  password="{{i.props.password}}"  placeholder="{{i.props.placeholder}}"  placeholder-style="{{i.props.placeholderStyle}}"  placeholder-class="{{i.props.placeholderClass}}"  disabled="{{i.props.disabled}}"  maxlength="{{i.props.maxlength}}"  focus="{{i.props.focus}}"  confirm-type="{{i.props.confirmType}}"  confirm-hold="{{i.props.confirmHold}}"  cursor="{{i.props.cursor}}"  selection-start="{{i.props.selectionStart}}"  selection-end="{{i.props.selectionEnd}}"  randomNumber="{{i.props.randomNumber}}"  controlled="{{i.props.controlled}}"  onInput="{{i.props.onInput}}"  onConfirm="{{i.props.onConfirm}}"  onFocus="{{i.props.onFocus}}"  onBlur="{{i.props.onBlur}}" >
    
      <block tt:for="{{i.children}}" tt:key="{{id}}">
        <template is="{{'REMAX_TPL_' + item.type}}" data="{{i: item}}" />
      </block>
    
  </input>
</template>


  

<template name="REMAX_TPL_label">
  <label  class="{{i.props.class}}"  style="{{i.props.style}}"  for="{{i.props.for}}" >
    
      <block tt:for="{{i.children}}" tt:key="{{id}}">
        <template is="{{'REMAX_TPL_' + item.type}}" data="{{i: item}}" />
      </block>
    
  </label>
</template>


  

<template name="REMAX_TPL_lifestyle">
  <lifestyle  public-id="{{i.props.publicId}}"  onFollow="{{i.props.onFollow}}" >
    
      <block tt:for="{{i.children}}" tt:key="{{id}}">
        <template is="{{'REMAX_TPL_' + item.type}}" data="{{i: item}}" />
      </block>
    
  </lifestyle>
</template>


  

<template name="REMAX_TPL_map">
  <map  style="{{i.props.style}}"  class="{{i.props.class}}"  latitude="{{i.props.latitude}}"  longitude="{{i.props.longitude}}"  scale="{{i.props.scale}}"  markers="{{i.props.markers}}"  polyline="{{i.props.polyline}}"  circles="{{i.props.circles}}"  controls="{{i.props.controls}}"  polygon="{{i.props.polygon}}"  show-location="{{i.props.showLocation}}"  include-points="{{i.props.includePoints}}"  include-padding="{{i.props.includePadding}}"  ground-overlays="{{i.props.groundOverlays}}"  tile-overlay="{{i.props.tileOverlay}}"  setting="{{i.props.setting}}"  onMarkerTap="{{i.props.onMarkerTap}}"  onCalloutTap="{{i.props.onCalloutTap}}"  onControlTap="{{i.props.onControlTap}}"  onRegionChange="{{i.props.onRegionChange}}"  onTap="{{i.props.onTap}}" >
    
      <block tt:for="{{i.children}}" tt:key="{{id}}">
        <template is="{{'REMAX_TPL_' + item.type}}" data="{{i: item}}" />
      </block>
    
  </map>
</template>


  

<template name="REMAX_TPL_movable-area">
  <movable-area  class="{{i.props.class}}"  style="{{i.props.style}}"  width="{{i.props.width}}"  height="{{i.props.height}}" >
    
      <block tt:for="{{i.children}}" tt:key="{{id}}">
        <template is="{{'REMAX_TPL_' + item.type}}" data="{{i: item}}" />
      </block>
    
  </movable-area>
</template>


  

<template name="REMAX_TPL_movable-view">
  <movable-view  class="{{i.props.class}}"  style="{{i.props.style}}"  direction="{{i.props.direction}}"  width="{{i.props.width}}"  height="{{i.props.height}}"  x="{{i.props.x}}"  y="{{i.props.y}}"  disabled="{{i.props.disabled}}"  onTouchStart="{{i.props.onTouchStart}}"  onTouchMove="{{i.props.onTouchMove}}"  onTouchEnd="{{i.props.onTouchEnd}}"  onTouchCancel="{{i.props.onTouchCancel}}"  onChange="{{i.props.onChange}}"  onChangeEnd="{{i.props.onChangeEnd}}" >
    
      <block tt:for="{{i.children}}" tt:key="{{id}}">
        <template is="{{'REMAX_TPL_' + item.type}}" data="{{i: item}}" />
      </block>
    
  </movable-view>
</template>


  

<template name="REMAX_TPL_navigator">
  <navigator  class="{{i.props.class}}"  style="{{i.props.style}}"  open-type="{{i.props.openType}}"  hover-class="{{i.props.hoverClass}}"  hover-start-time="{{i.props.hoverStartTime}}"  hover-stay-time="{{i.props.hoverStayTime}}"  url="{{i.props.url}}" >
    
      <block tt:for="{{i.children}}" tt:key="{{id}}">
        <template is="{{'REMAX_TPL_' + item.type}}" data="{{i: item}}" />
      </block>
    
  </navigator>
</template>


  

<template name="REMAX_TPL_picker-view">
  <picker-view  class="{{i.props.class}}"  style="{{i.props.style}}"  value="{{i.props.value}}"  indicator-style="{{i.props.indicatorStyle}}"  indicator-class="{{i.props.indicatorClass}}"  mask-style="{{i.props.maskStyle}}"  mask-class="{{i.props.maskClass}}"  onChange="{{i.props.onChange}}" >
    
      <block tt:for="{{i.children}}" tt:key="{{item.id}}">
        <picker-view-column>
          <view tt:for="{{item.children}}">
            <template is="{{'REMAX_TPL_' + item.type}}" data="{{i: item}}" />
          </view>
        </picker-view-column>
      </block>
    
  </picker-view>
</template>


  

<template name="REMAX_TPL_picker">
  <picker  class="{{i.props.class}}"  style="{{i.props.style}}"  range="{{i.props.range}}"  range-key="{{i.props.rangeKey}}"  value="{{i.props.value}}"  onChange="{{i.props.onChange}}"  disabled="{{i.props.disabled}}" >
    
      <block tt:for="{{i.children}}" tt:key="{{id}}">
        <template is="{{'REMAX_TPL_' + item.type}}" data="{{i: item}}" />
      </block>
    
  </picker>
</template>


  

<template name="REMAX_TPL_progress">
  <progress  class="{{i.props.class}}"  style="{{i.props.style}}"  percent="{{i.props.percent}}"  show-info="{{i.props.showInfo}}"  stroke-width="{{i.props.strokeWidth}}"  active-color="{{i.props.activeColor}}"  background-color="{{i.props.backgroundColor}}"  active="{{i.props.active}}" >
    
      <block tt:for="{{i.children}}" tt:key="{{id}}">
        <template is="{{'REMAX_TPL_' + item.type}}" data="{{i: item}}" />
      </block>
    
  </progress>
</template>


  

<template name="REMAX_TPL_radio-group">
  <radio-group  class="{{i.props.class}}"  style="{{i.props.style}}"  onChange="{{i.props.onChange}}"  name="{{i.props.name}}" >
    
      <block tt:for="{{i.children}}" tt:key="{{id}}">
        <template is="{{'REMAX_TPL_' + item.type}}" data="{{i: item}}" />
      </block>
    
  </radio-group>
</template>


  

<template name="REMAX_TPL_radio">
  <radio  class="{{i.props.class}}"  style="{{i.props.style}}"  value="{{i.props.value}}"  checked="{{i.props.checked}}"  disabled="{{i.props.disabled}}"  color="{{i.props.color}}" >
    
      <block tt:for="{{i.children}}" tt:key="{{id}}">
        <template is="{{'REMAX_TPL_' + item.type}}" data="{{i: item}}" />
      </block>
    
  </radio>
</template>


  

<template name="REMAX_TPL_rich-text">
  <rich-text  class="{{i.props.class}}"  style="{{i.props.style}}"  nodes="{{i.props.nodes}}"  onTap="{{i.props.onTap}}"  onTouchStart="{{i.props.onTouchStart}}"  onTouchMove="{{i.props.onTouchMove}}"  onTouchEnd="{{i.props.onTouchEnd}}"  onTouchCancel="{{i.props.onTouchCancel}}"  onLongTap="{{i.props.onLongTap}}" >
    
      <block tt:for="{{i.children}}" tt:key="{{id}}">
        <template is="{{'REMAX_TPL_' + item.type}}" data="{{i: item}}" />
      </block>
    
  </rich-text>
</template>


  

<template name="REMAX_TPL_scroll-view">
  <scroll-view  class="{{i.props.class}}"  style="{{i.props.style}}"  scroll-x="{{i.props.scrollX}}"  scroll-y="{{i.props.scrollY}}"  upper-threshold="{{i.props.upperThreshold}}"  lower-threshold="{{i.props.lowerThreshold}}"  scroll-top="{{i.props.scrollTop}}"  scroll-left="{{i.props.scrollLeft}}"  scroll-into-view="{{i.props.scrollIntoView}}"  scroll-with-animation="{{i.props.scrollWithAnimation}}"  scroll-animation-duration="{{i.props.scrollAnimationDuration}}"  enable-back-to-top="{{i.props.enableBackToTop}}"  trap-scroll="{{i.props.trapScroll}}"  onScrollToUpper="{{i.props.onScrollToUpper}}"  onScrollToLower="{{i.props.onScrollToLower}}"  onScroll="{{i.props.onScroll}}"  onTouchStart="{{i.props.onTouchStart}}"  onTouchMove="{{i.props.onTouchMove}}"  onTouchEnd="{{i.props.onTouchEnd}}"  onTouchCancel="{{i.props.onTouchCancel}}" >
    
      <block tt:for="{{i.children}}" tt:key="{{id}}">
        <template is="{{'REMAX_TPL_' + item.type}}" data="{{i: item}}" />
      </block>
    
  </scroll-view>
</template>


  

<template name="REMAX_TPL_slider">
  <slider  class="{{i.props.class}}"  style="{{i.props.style}}"  name="{{i.props.name}}"  min="{{i.props.min}}"  max="{{i.props.max}}"  step="{{i.props.step}}"  disabled="{{i.props.disabled}}"  value="{{i.props.value}}"  show-value="{{i.props.showValue}}"  active-color="{{i.props.activeColor}}"  background-color="{{i.props.backgroundColor}}"  track-size="{{i.props.trackSize}}"  handle-size="{{i.props.handleSize}}"  handle-color="{{i.props.handleColor}}"  onChange="{{i.props.onChange}}"  onChanging="{{i.props.onChanging}}" >
    
      <block tt:for="{{i.children}}" tt:key="{{id}}">
        <template is="{{'REMAX_TPL_' + item.type}}" data="{{i: item}}" />
      </block>
    
  </slider>
</template>


  

<template name="REMAX_TPL_swiper">
  <swiper  class="{{i.props.class}}"  style="{{i.props.style}}"  indicator-dots="{{i.props.indicatorDots}}"  indicator-color="{{i.props.indicatorColor}}"  indicator-active-color="{{i.props.indicatorActiveColor}}"  active-class="{{i.props.activeClass}}"  changing-class="{{i.props.changingClass}}"  autoplay="{{i.props.autoplay}}"  current="{{i.props.current}}"  duration="{{i.props.duration}}"  interval="{{i.props.interval}}"  circular="{{i.props.circular}}"  vertical="{{i.props.vertical}}"  previous-margin="{{i.props.previousMargin}}"  next-margin="{{i.props.nextMargin}}"  acceleration="{{i.props.acceleration}}"  disable-programmatic-animation="{{i.props.disableProgrammaticAnimation}}"  onChange="{{i.props.onChange}}"  onTransition="{{i.props.onTransition}}"  onAnimationEnd="{{i.props.onAnimationEnd}}"  disable-touch="{{i.props.disableTouch}}" >
    
      <block tt:for="{{i.children}}" tt:key="{{id}}">
        <swiper-item key="{{item.props.key}}">
          <block tt:for="{{item.children}}" tt:key="{{id}}">
            <template is="{{'REMAX_TPL_' + item.type}}" data="{{i: item}}" />
          </block>
        </swiper-item>
      </block>
    
  </swiper>
</template>


  

<template name="REMAX_TPL_switch">
  <switch  class="{{i.props.class}}"  style="{{i.props.style}}"  name="{{i.props.name}}"  checked="{{i.props.checked}}"  disabled="{{i.props.disabled}}"  color="{{i.props.color}}"  onChange="{{i.props.onChange}}"  controlled="{{i.props.controlled}}" >
    
      <block tt:for="{{i.children}}" tt:key="{{id}}">
        <template is="{{'REMAX_TPL_' + item.type}}" data="{{i: item}}" />
      </block>
    
  </switch>
</template>


  

<template name="REMAX_TPL_text">
  <text  class="{{i.props.class}}"  style="{{i.props.style}}"  selectable="{{i.props.selectable}}"  space="{{i.props.space}}"  decode="{{i.props.decode}}"  number-of-lines="{{i.props.numberOfLines}}" >
    
      <block tt:for="{{i.children}}" tt:key="{{id}}">
        <template is="{{'REMAX_TPL_' + item.type}}" data="{{i: item}}" />
      </block>
    
  </text>
</template>


  

<template name="REMAX_TPL_textarea">
  <textarea  class="{{i.props.class}}"  style="{{i.props.style}}"  name="{{i.props.name}}"  value="{{i.props.value}}"  placeholder="{{i.props.placeholder}}"  placeholder-style="{{i.props.placeholderStyle}}"  placeholder-class="{{i.props.placeholderClass}}"  disabled="{{i.props.disabled}}"  maxlength="{{i.props.maxlength}}"  focus="{{i.props.focus}}"  auto-height="{{i.props.autoHeight}}"  show-count="{{i.props.showCount}}"  controlled="{{i.props.controlled}}"  onInput="{{i.props.onInput}}"  onFocus="{{i.props.onFocus}}"  onBlur="{{i.props.onBlur}}"  onConfirm="{{i.props.onConfirm}}" >
    
      <block tt:for="{{i.children}}" tt:key="{{id}}">
        <template is="{{'REMAX_TPL_' + item.type}}" data="{{i: item}}" />
      </block>
    
  </textarea>
</template>


  

<template name="REMAX_TPL_web-view">
  <web-view  src="{{i.props.src}}"  onMessage="{{i.props.onMessage}}" >
    
      <block tt:for="{{i.children}}" tt:key="{{id}}">
        <template is="{{'REMAX_TPL_' + item.type}}" data="{{i: item}}" />
      </block>
    
  </web-view>
</template>


<template name="REMAX_TPL_plain-text" data="{{i: i}}">
  <block>{{i.text}}</block>
</template>
