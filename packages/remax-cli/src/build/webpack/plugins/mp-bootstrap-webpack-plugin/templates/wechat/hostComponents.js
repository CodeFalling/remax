module.exports = {
  ad: {
    alias: {
      unitId: 'unit-id',
      adIntervals: 'ad-intervals',
      onLoad: 'bindload',
      onError: 'binderror',
      onClose: 'bindclose',
      animation: 'animation',
    },
    props: ['unit-id', 'ad-intervals', 'bindload', 'binderror', 'bindclose', 'animation'],
  },
  audio: {
    alias: {
      id: 'id',
      className: 'class',
      style: 'style',
      src: 'src',
      loop: 'loop',
      controls: 'controls',
      poster: 'poster',
      name: 'name',
      author: 'author',
      onError: 'binderror',
      onPlay: 'bindplay',
      onPause: 'bindpause',
      onTimeUpdate: 'bindtimeupdate',
      onEnded: 'bindended',
      animation: 'animation',
    },
    props: [
      'id',
      'class',
      'style',
      'src',
      'loop',
      'controls',
      'poster',
      'name',
      'author',
      'binderror',
      'bindplay',
      'bindpause',
      'bindtimeupdate',
      'bindended',
      'animation',
    ],
  },
  button: {
    alias: {
      className: 'class',
      id: 'id',
      style: 'style',
      type: 'type',
      plain: 'plain',
      disabled: 'disabled',
      loading: 'loading',
      formType: 'form-type',
      openType: 'open-type',
      hoverClass: 'hover-class',
      hoverClassName: 'hover-class',
      hoverStopPropagation: 'hover-stop-propagation',
      hoverStartTime: 'hover-start-time',
      hoverStayTime: 'hover-stay-time',
      lang: 'lang',
      sessionFrom: 'session-from',
      sendMessageTitle: 'send-message-title',
      sendMessagePath: 'send-message-path',
      sendMessageImg: 'send-message-img',
      size: 'size',
      appParameter: 'app-parameter',
      showMessageCard: 'show-message-card',
      onGetUserInfo: 'bindgetuserinfo',
      onContact: 'bindcontact',
      onGetPhoneNumber: 'bindgetphonenumber',
      onError: 'binderror',
      onOpenSetting: 'bindopensetting',
      onLaunchApp: 'bindlaunchapp',
      onTap: 'bindtap',
      onClick: 'bindtap',
      animation: 'animation',
    },
    props: [
      'class',
      'id',
      'style',
      'type',
      'plain',
      'disabled',
      'loading',
      'form-type',
      'open-type',
      'hover-class',
      'hover-class',
      'hover-stop-propagation',
      'hover-start-time',
      'hover-stay-time',
      'lang',
      'session-from',
      'send-message-title',
      'send-message-path',
      'send-message-img',
      'size',
      'app-parameter',
      'show-message-card',
      'bindgetuserinfo',
      'bindcontact',
      'bindgetphonenumber',
      'binderror',
      'bindopensetting',
      'bindlaunchapp',
      'bindtap',
      'bindtap',
      'animation',
    ],
  },
  camera: {
    alias: {
      id: 'id',
      className: 'class',
      style: 'style',
      mode: 'mode',
      devicePosition: 'device-position',
      flash: 'flash',
      frameSize: 'frame-size',
      onStop: 'bindstop',
      onError: 'binderror',
      onInitDone: 'bindinitdone',
      onScanCode: 'bindscancode',
      animation: 'animation',
    },
    props: [
      'id',
      'class',
      'style',
      'mode',
      'device-position',
      'flash',
      'frame-size',
      'bindstop',
      'binderror',
      'bindinitdone',
      'bindscancode',
      'animation',
    ],
  },
  canvas: {
    alias: {
      id: 'id',
      style: 'style',
      className: 'class',
      width: 'width',
      height: 'height',
      disableScroll: 'disable-scroll',
      type: 'type',
      canvasId: 'canvas-id',
      onTouchStart: 'bindtouchstart',
      onTouchMove: 'bindtouchmove',
      onTouchEnd: 'bindtouchend',
      onTouchCancel: 'bindtouchcancel',
      onLongTap: 'bindlongtap',
      onLongClick: 'bindlongtap',
      onTap: 'bindtap',
      onClick: 'bindtap',
      onError: 'binderror',
      animation: 'animation',
    },
    props: [
      'id',
      'style',
      'class',
      'width',
      'height',
      'disable-scroll',
      'type',
      'canvas-id',
      'bindtouchstart',
      'bindtouchmove',
      'bindtouchend',
      'bindtouchcancel',
      'bindlongtap',
      'bindlongtap',
      'bindtap',
      'bindtap',
      'binderror',
      'animation',
    ],
  },
  'checkbox-group': {
    alias: {
      id: 'id',
      className: 'class',
      style: 'style',
      name: 'name',
      onChange: 'bindchange',
      animation: 'animation',
    },
    props: ['id', 'class', 'style', 'name', 'bindchange', 'animation'],
  },
  checkbox: {
    alias: {
      id: 'id',
      className: 'class',
      style: 'style',
      value: 'value',
      checked: 'checked',
      disabled: 'disabled',
      onChange: 'bindchange',
      color: 'color',
      animation: 'animation',
    },
    props: ['id', 'class', 'style', 'value', 'checked', 'disabled', 'bindchange', 'color', 'animation'],
  },
  'cover-image': {
    alias: {
      id: 'id',
      className: 'class',
      style: 'style',
      src: 'src',
      onLoad: 'bindload',
      onError: 'binderror',
      onTap: 'bindtap',
      onClick: 'bindtap',
      animation: 'animation',
    },
    props: ['id', 'class', 'style', 'src', 'bindload', 'binderror', 'bindtap', 'bindtap', 'animation'],
  },
  'cover-view': {
    alias: {
      id: 'id',
      className: 'class',
      style: 'style',
      scrollTop: 'scroll-top',
      onTap: 'bindtap',
      onClick: 'bindtap',
      animation: 'animation',
    },
    props: ['id', 'class', 'style', 'scroll-top', 'bindtap', 'bindtap', 'animation'],
  },
  editor: {
    alias: {
      id: 'id',
      className: 'class',
      style: 'style',
      readOnly: 'read-only',
      placeholder: 'placeholder',
      showImgSize: 'show-img-size',
      showImgToolbar: 'show-img-toolbar',
      showImgResize: 'show-img-resize',
      onReady: 'bindready',
      onFocus: 'bindfocus',
      onBlur: 'bindblur',
      onInput: 'bindinput',
      onStatusChange: 'bindstatuschange',
      animation: 'animation',
    },
    props: [
      'id',
      'class',
      'style',
      'read-only',
      'placeholder',
      'show-img-size',
      'show-img-toolbar',
      'show-img-resize',
      'bindready',
      'bindfocus',
      'bindblur',
      'bindinput',
      'bindstatuschange',
      'animation',
    ],
  },
  form: {
    alias: {
      id: 'id',
      className: 'class',
      style: 'style',
      reportSubmit: 'report-submit',
      onSubmit: 'bindsubmit',
      onReset: 'bindreset',
      reportSubmitTimeout: 'report-submit-timeout',
      animation: 'animation',
    },
    props: ['id', 'class', 'style', 'report-submit', 'bindsubmit', 'bindreset', 'report-submit-timeout', 'animation'],
  },
  'functional-page-navigator': {
    alias: {
      version: 'version',
      name: 'name',
      args: 'args',
      onSuccess: 'bindsuccess',
      onFail: 'bindfail',
      animation: 'animation',
    },
    props: ['version', 'name', 'args', 'bindsuccess', 'bindfail', 'animation'],
  },
  icon: {
    alias: {
      id: 'id',
      className: 'class',
      style: 'style',
      type: 'type',
      size: 'size',
      color: 'color',
      animation: 'animation',
    },
    props: ['id', 'class', 'style', 'type', 'size', 'color', 'animation'],
  },
  image: {
    alias: {
      id: 'id',
      src: 'src',
      mode: 'mode',
      className: 'class',
      style: 'style',
      lazyLoad: 'lazy-load',
      onLoad: 'bindload',
      onError: 'binderror',
      onTap: 'bindtap',
      onClick: 'bindtap',
      showMenuByLongpress: 'show-menu-by-longpress',
      animation: 'animation',
    },
    props: [
      'id',
      'src',
      'mode',
      'class',
      'style',
      'lazy-load',
      'bindload',
      'binderror',
      'bindtap',
      'bindtap',
      'show-menu-by-longpress',
      'animation',
    ],
  },
  input: {
    alias: {
      id: 'id',
      autoFocus: 'auto-focus',
      className: 'class',
      focus: 'focus',
      name: 'name',
      maxlength: 'maxlength',
      value: 'value',
      style: 'style',
      password: 'password',
      type: 'type',
      confirmType: 'confirm-type',
      confirmHold: 'confirm-hold',
      cursor: 'cursor',
      selectionStart: 'selection-start',
      selectionEnd: 'selection-end',
      adjustPosition: 'adjust-position',
      placeholder: 'placeholder',
      placeholderStyle: 'placeholder-style',
      placeholderClass: 'placeholder-class',
      placeholderClassName: 'placeholder-class',
      disabled: 'disabled',
      cursorSpacing: 'cursor-spacing',
      onInput: 'bindinput',
      onTap: 'bindtap',
      onClick: 'bindtap',
      onFocus: 'bindfocus',
      onBlur: 'bindblur',
      onConfirm: 'bindconfirm',
      onKeyboardHeightChange: 'bindkeyboardheightchange',
      animation: 'animation',
    },
    props: [
      'id',
      'auto-focus',
      'class',
      'focus',
      'name',
      'maxlength',
      'value',
      'style',
      'password',
      'type',
      'confirm-type',
      'confirm-hold',
      'cursor',
      'selection-start',
      'selection-end',
      'adjust-position',
      'placeholder',
      'placeholder-style',
      'placeholder-class',
      'placeholder-class',
      'disabled',
      'cursor-spacing',
      'bindinput',
      'bindtap',
      'bindtap',
      'bindfocus',
      'bindblur',
      'bindconfirm',
      'bindkeyboardheightchange',
      'animation',
    ],
  },
  label: {
    alias: {
      id: 'id',
      className: 'class',
      style: 'style',
      for: 'for',
      animation: 'animation',
      onClick: 'bindtap',
      onTap: 'bindtap',
    },
    props: ['id', 'class', 'style', 'for', 'animation', 'bindtap', 'bindtap'],
  },
  'live-player': {
    alias: {
      id: 'id',
      className: 'class',
      style: 'style',
      src: 'src',
      mode: 'mode',
      autoplay: 'autoplay',
      muted: 'muted',
      orientation: 'orientation',
      objectFit: 'object-fit',
      background: 'background',
      minCache: 'min-cache',
      maxCache: 'max-cache',
      soundMode: 'sound-mode',
      autoPauseIfNavigate: 'auto-pause-if-navigate',
      autoPauseIfOpenNative: 'auto-pause-if-open-native',
      onStateChange: 'bindstatechange',
      onFullscreenChange: 'bindfullscreenchange',
      onFullScreenChange: 'bindfullscreenchange',
      onNetStatus: 'bindnetstatus',
      animation: 'animation',
    },
    props: [
      'id',
      'class',
      'style',
      'src',
      'mode',
      'autoplay',
      'muted',
      'orientation',
      'object-fit',
      'background',
      'min-cache',
      'max-cache',
      'sound-mode',
      'auto-pause-if-navigate',
      'auto-pause-if-open-native',
      'bindstatechange',
      'bindfullscreenchange',
      'bindfullscreenchange',
      'bindnetstatus',
      'animation',
    ],
  },
  'live-pusher': {
    alias: {
      id: 'id',
      className: 'class',
      style: 'style',
      url: 'url',
      mode: 'mode',
      autopush: 'autopush',
      muted: 'muted',
      enableCamera: 'enable-camera',
      autoFocus: 'auto-focus',
      orientation: 'orientation',
      beauty: 'beauty',
      whiteness: 'whiteness',
      aspect: 'aspect',
      minBitrate: 'min-bitrate',
      maxBitrate: 'max-bitrate',
      waitingImage: 'waiting-image',
      waitingImageHash: 'waiting-image-hash',
      zoom: 'zoom',
      devicePosition: 'device-position',
      backgroundMute: 'background-mute',
      mirror: 'mirror',
      onStateChange: 'bindstatechange',
      onNetStatus: 'bindnetstatus',
      onError: 'binderror',
      onBgmStart: 'bindbgmstart',
      onBgmProgress: 'bindbgmprogress',
      onBgmComplete: 'bindbgmcomplete',
      animation: 'animation',
    },
    props: [
      'id',
      'class',
      'style',
      'url',
      'mode',
      'autopush',
      'muted',
      'enable-camera',
      'auto-focus',
      'orientation',
      'beauty',
      'whiteness',
      'aspect',
      'min-bitrate',
      'max-bitrate',
      'waiting-image',
      'waiting-image-hash',
      'zoom',
      'device-position',
      'background-mute',
      'mirror',
      'bindstatechange',
      'bindnetstatus',
      'binderror',
      'bindbgmstart',
      'bindbgmprogress',
      'bindbgmcomplete',
      'animation',
    ],
  },
  map: {
    alias: {
      id: 'id',
      style: 'style',
      className: 'class',
      latitude: 'latitude',
      longitude: 'longitude',
      scale: 'scale',
      markers: 'markers',
      polyline: 'polyline',
      circles: 'circles',
      controls: 'controls',
      polygon: 'polygon',
      showLocation: 'show-location',
      includePoints: 'include-points',
      includePadding: 'include-padding',
      groundOverlays: 'ground-overlays',
      tileOverlay: 'tile-overlay',
      setting: 'setting',
      covers: 'covers',
      subkey: 'subkey',
      layerStyle: 'layer-style',
      rotate: 'rotate',
      skew: 'skew',
      enable3D: 'enable-3D',
      showCompass: 'show-compass',
      showScale: 'show-scale',
      enableOverlooking: 'enable-overlooking',
      enableZoom: 'enable-zoom',
      enableScroll: 'enable-scroll',
      enableRotate: 'enable-rotate',
      enableSatellite: 'enable-satellite',
      enableTraffic: 'enable-traffic',
      onTap: 'bindtap',
      onClick: 'bindtap',
      onMarkerTap: 'bindmarkertap',
      onMarkerClick: 'bindmarkertap',
      onControlTap: 'bindcontroltap',
      onControlClick: 'bindcontroltap',
      onCalloutTap: 'bindcallouttap',
      onCalloutClick: 'bindcallouttap',
      onUpdated: 'bindupdated',
      onRegionChange: 'bindregionchange',
      onPoiTap: 'bindpoitap',
      onPoiClick: 'bindpoitap',
      animation: 'animation',
    },
    props: [
      'id',
      'style',
      'class',
      'latitude',
      'longitude',
      'scale',
      'markers',
      'polyline',
      'circles',
      'controls',
      'polygon',
      'show-location',
      'include-points',
      'include-padding',
      'ground-overlays',
      'tile-overlay',
      'setting',
      'covers',
      'subkey',
      'layer-style',
      'rotate',
      'skew',
      'enable-3D',
      'show-compass',
      'show-scale',
      'enable-overlooking',
      'enable-zoom',
      'enable-scroll',
      'enable-rotate',
      'enable-satellite',
      'enable-traffic',
      'bindtap',
      'bindtap',
      'bindmarkertap',
      'bindmarkertap',
      'bindcontroltap',
      'bindcontroltap',
      'bindcallouttap',
      'bindcallouttap',
      'bindupdated',
      'bindregionchange',
      'bindpoitap',
      'bindpoitap',
      'animation',
    ],
  },
  'movable-area': {
    alias: {
      className: 'class',
      style: 'style',
      width: 'width',
      height: 'height',
      id: 'id',
      scaleArea: 'scale-area',
      animation: 'animation',
    },
    props: ['class', 'style', 'width', 'height', 'id', 'scale-area', 'animation'],
  },
  'movable-view': {
    alias: {
      className: 'class',
      style: 'style',
      id: 'id',
      direction: 'direction',
      inertia: 'inertia',
      outOfBounds: 'out-of-bounds',
      x: 'x',
      y: 'y',
      damping: 'damping',
      friction: 'friction',
      disabled: 'disabled',
      scale: 'scale',
      scaleMin: 'scale-min',
      scaleMax: 'scale-max',
      scaleValue: 'scale-value',
      animation: 'animation',
      onChange: 'bindchange',
      onScale: 'bindscale',
      hTouchMove: 'htouchmove',
      vTouchMove: 'vtouchmove',
    },
    props: [
      'class',
      'style',
      'id',
      'direction',
      'inertia',
      'out-of-bounds',
      'x',
      'y',
      'damping',
      'friction',
      'disabled',
      'scale',
      'scale-min',
      'scale-max',
      'scale-value',
      'animation',
      'bindchange',
      'bindscale',
      'htouchmove',
      'vtouchmove',
    ],
  },
  navigator: {
    alias: {
      id: 'id',
      className: 'class',
      style: 'style',
      openType: 'open-type',
      hoverClass: 'hover-class',
      hoverClassName: 'hover-class',
      hoverStartTime: 'hover-start-time',
      hoverStayTime: 'hover-stay-time',
      url: 'url',
      target: 'target',
      delta: 'delta',
      appId: 'app-id',
      path: 'path',
      extraData: 'extra-data',
      version: 'version',
      hoverStopPropagation: 'hover-stop-propagation',
      onSuccess: 'bindsuccess',
      onFail: 'bindfail',
      onComplete: 'bindcomplete',
      animation: 'animation',
    },
    props: [
      'id',
      'class',
      'style',
      'open-type',
      'hover-class',
      'hover-class',
      'hover-start-time',
      'hover-stay-time',
      'url',
      'target',
      'delta',
      'app-id',
      'path',
      'extra-data',
      'version',
      'hover-stop-propagation',
      'bindsuccess',
      'bindfail',
      'bindcomplete',
      'animation',
    ],
  },
  'official-account': {
    alias: {
      onLoad: 'onLoad',
      onError: 'onError',
    },
    props: ['onLoad', 'onError'],
  },
  'open-data': {
    alias: {
      type: 'type',
      openGid: 'open-gid',
      lang: 'lang',
    },
    props: ['type', 'open-gid', 'lang'],
  },
  'picker-view-column': {
    props: [],
    alias: {},
  },
  'picker-view': {
    alias: {
      id: 'id',
      className: 'class',
      style: 'style',
      value: 'value',
      indicatorStyle: 'indicator-style',
      indicatorClass: 'indicator-class',
      indicatorClassName: 'indicator-class',
      maskStyle: 'mask-style',
      maskClass: 'mask-class',
      maskClassName: 'mask-class',
      onChange: 'bindchange',
      onPickStart: 'bindpickstart',
      onPickEnd: 'bindpickend',
      animation: 'animation',
    },
    props: [
      'id',
      'class',
      'style',
      'value',
      'indicator-style',
      'indicator-class',
      'indicator-class',
      'mask-style',
      'mask-class',
      'mask-class',
      'bindchange',
      'bindpickstart',
      'bindpickend',
      'animation',
    ],
  },
  picker: {
    alias: {
      id: 'id',
      className: 'class',
      style: 'style',
      range: 'range',
      rangeKey: 'range-key',
      value: 'value',
      onChange: 'bindchange',
      onCancel: 'bindcancel',
      onColumnChange: 'bindcolumnchange',
      start: 'start',
      end: 'end',
      fields: 'fields',
      customItem: 'custom-item',
      disabled: 'disabled',
      animation: 'animation',
    },
    props: [
      'id',
      'class',
      'style',
      'range',
      'range-key',
      'value',
      'bindchange',
      'bindcancel',
      'bindcolumnchange',
      'start',
      'end',
      'fields',
      'custom-item',
      'disabled',
      'animation',
    ],
  },
  progress: {
    alias: {
      id: 'id',
      className: 'class',
      style: 'style',
      percent: 'percent',
      showInfo: 'show-info',
      borderRadius: 'border-radius',
      fontSize: 'font-size',
      strokeWidth: 'stroke-width',
      color: 'color',
      activeColor: 'activeColor',
      backgroundColor: 'backgroundColor',
      active: 'active',
      activeMode: 'active-mode',
      onActiveEnd: 'bindactiveend',
      animation: 'animation',
    },
    props: [
      'id',
      'class',
      'style',
      'percent',
      'show-info',
      'border-radius',
      'font-size',
      'stroke-width',
      'color',
      'activeColor',
      'backgroundColor',
      'active',
      'active-mode',
      'bindactiveend',
      'animation',
    ],
  },
  'radio-group': {
    alias: {
      id: 'id',
      className: 'class',
      style: 'style',
      onChange: 'bindchange',
      name: 'name',
      animation: 'animation',
    },
    props: ['id', 'class', 'style', 'bindchange', 'name', 'animation'],
  },
  radio: {
    alias: {
      id: 'id',
      className: 'class',
      style: 'style',
      value: 'value',
      checked: 'checked',
      disabled: 'disabled',
      color: 'color',
      animation: 'animation',
    },
    props: ['id', 'class', 'style', 'value', 'checked', 'disabled', 'color', 'animation'],
  },
  'rich-text': {
    alias: {
      id: 'id',
      className: 'class',
      style: 'style',
      nodes: 'nodes',
      onTap: 'bindtap',
      onClick: 'bindtap',
      space: 'space',
      onTouchStart: 'bindtouchstart',
      onTouchMove: 'bindtouchmove',
      onTouchEnd: 'bindtouchend',
      onTouchCancel: 'bindtouchcancel',
      onLongTap: 'bindlongtap',
      onLongClick: 'bindlongtap',
      animation: 'animation',
    },
    props: [
      'id',
      'class',
      'style',
      'nodes',
      'bindtap',
      'bindtap',
      'space',
      'bindtouchstart',
      'bindtouchmove',
      'bindtouchend',
      'bindtouchcancel',
      'bindlongtap',
      'bindlongtap',
      'animation',
    ],
  },
  'scroll-view': {
    alias: {
      id: 'id',
      className: 'class',
      style: 'style',
      scrollX: 'scroll-x',
      scrollY: 'scroll-y',
      upperThreshold: 'upper-threshold',
      lowerThreshold: 'lower-threshold',
      scrollTop: 'scroll-top',
      scrollLeft: 'scroll-left',
      scrollIntoView: 'scroll-into-view',
      scrollWithAnimation: 'scroll-with-animation',
      enableBackToTop: 'enable-back-to-top',
      enableFlex: 'enable-flex',
      onScrollToUpper: 'bindscrolltoupper',
      onScrollToLower: 'bindscrolltolower',
      onScroll: 'bindscroll',
      onTap: 'bindtap',
      onTouchStart: 'bindtouchstart',
      onTouchEnd: 'bindtouchend',
      onTouchMove: 'bindtouchmove',
      onTouchCancel: 'bindtouchcancel',
      onClick: 'bindtap',
      animation: 'animation',
    },
    props: [
      'id',
      'class',
      'style',
      'scroll-x',
      'scroll-y',
      'upper-threshold',
      'lower-threshold',
      'scroll-top',
      'scroll-left',
      'scroll-into-view',
      'scroll-with-animation',
      'enable-back-to-top',
      'enable-flex',
      'bindscrolltoupper',
      'bindscrolltolower',
      'bindscroll',
      'bindtap',
      'bindtouchstart',
      'bindtouchend',
      'bindtouchmove',
      'bindtouchcancel',
      'bindtap',
      'animation',
    ],
  },
  slider: {
    alias: {
      id: 'id',
      className: 'class',
      style: 'style',
      name: 'name',
      min: 'min',
      color: 'color',
      max: 'max',
      step: 'step',
      disabled: 'disabled',
      value: 'value',
      showValue: 'show-value',
      activeColor: 'activeColor',
      backgroundColor: 'backgroundColor',
      trackSize: 'track-size',
      blockSize: 'block-size',
      blockColor: 'block-color',
      onChange: 'bindchange',
      onChanging: 'bindchanging',
      selectedColor: 'selectedColor',
      animation: 'animation',
    },
    props: [
      'id',
      'class',
      'style',
      'name',
      'min',
      'color',
      'max',
      'step',
      'disabled',
      'value',
      'show-value',
      'activeColor',
      'backgroundColor',
      'track-size',
      'block-size',
      'block-color',
      'bindchange',
      'bindchanging',
      'selectedColor',
      'animation',
    ],
  },
  'swiper-item': {
    alias: {
      key: 'key',
      id: 'id',
      className: 'class',
      style: 'style',
      itemId: 'item-id',
      animation: 'animation',
    },
    props: ['key', 'id', 'class', 'style', 'item-id', 'animation'],
  },
  swiper: {
    alias: {
      id: 'id',
      className: 'class',
      style: 'style',
      indicatorDots: 'indicator-dots',
      indicatorColor: 'indicator-color',
      indicatorActiveColor: 'indicator-active-color',
      autoplay: 'autoplay',
      current: 'current',
      interval: 'interval',
      duration: 'duration',
      circular: 'circular',
      vertical: 'vertical',
      previousMargin: 'previous-margin',
      nextMargin: 'next-margin',
      displayMultipleItems: 'display-multiple-items',
      skipHiddenItemLayout: 'skip-hidden-item-layout',
      easingFunction: 'easing-function',
      onChange: 'bindchange',
      onTransition: 'bindtransition',
      onAnimationFinish: 'bindanimationfinish',
      onTap: 'bindtap',
      onClick: 'bindtap',
      animation: 'animation',
    },
    props: [
      'id',
      'class',
      'style',
      'indicator-dots',
      'indicator-color',
      'indicator-active-color',
      'autoplay',
      'current',
      'interval',
      'duration',
      'circular',
      'vertical',
      'previous-margin',
      'next-margin',
      'display-multiple-items',
      'skip-hidden-item-layout',
      'easing-function',
      'bindchange',
      'bindtransition',
      'bindanimationfinish',
      'bindtap',
      'bindtap',
      'animation',
    ],
  },
  switch: {
    alias: {
      id: 'id',
      className: 'class',
      style: 'style',
      name: 'name',
      checked: 'checked',
      disabled: 'disabled',
      color: 'color',
      onChange: 'bindchange',
      controlled: 'controlled',
      type: 'type',
      animation: 'animation',
    },
    props: [
      'id',
      'class',
      'style',
      'name',
      'checked',
      'disabled',
      'color',
      'bindchange',
      'controlled',
      'type',
      'animation',
    ],
  },
  text: {
    alias: {
      id: 'id',
      className: 'class',
      style: 'style',
      selectable: 'selectable',
      space: 'space',
      decode: 'decode',
      onTap: 'bindtap',
      onClick: 'bindtap',
      animation: 'animation',
    },
    props: ['id', 'class', 'style', 'selectable', 'space', 'decode', 'bindtap', 'bindtap', 'animation'],
  },
  textarea: {
    alias: {
      id: 'id',
      className: 'class',
      style: 'style',
      name: 'name',
      value: 'value',
      placeholder: 'placeholder',
      placeholderStyle: 'placeholder-style',
      placeholderClass: 'placeholder-class',
      placeholderClassName: 'placeholder-class',
      disabled: 'disabled',
      maxlength: 'maxlength',
      autoFocus: 'auto-focus',
      focus: 'focus',
      fixed: 'fixed',
      autoHeight: 'auto-height',
      showCount: 'show-count',
      controlled: 'controlled',
      cursorSpacing: 'cursor-spacing',
      cursor: 'cursor',
      showConfirmBar: 'show-confirm-bar',
      selectionStart: 'selection-start',
      selectionEnd: 'selection-end',
      adjustPosition: 'adjust-position',
      onFocus: 'bindfocus',
      onBlur: 'bindblur',
      onLineChange: 'bindlinechange',
      onInput: 'bindinput',
      onConfirm: 'bindconfirm',
      onKeyboardHeightChange: 'bindkeyboardheightchange',
      animation: 'animation',
    },
    props: [
      'id',
      'class',
      'style',
      'name',
      'value',
      'placeholder',
      'placeholder-style',
      'placeholder-class',
      'placeholder-class',
      'disabled',
      'maxlength',
      'auto-focus',
      'focus',
      'fixed',
      'auto-height',
      'show-count',
      'controlled',
      'cursor-spacing',
      'cursor',
      'show-confirm-bar',
      'selection-start',
      'selection-end',
      'adjust-position',
      'bindfocus',
      'bindblur',
      'bindlinechange',
      'bindinput',
      'bindconfirm',
      'bindkeyboardheightchange',
      'animation',
    ],
  },
  video: {
    alias: {
      id: 'id',
      className: 'class',
      style: 'style',
      src: 'src',
      duration: 'duration',
      controls: 'controls',
      danmuList: 'danmu-list',
      danmuBtn: 'danmu-btn',
      enableDanmu: 'enable-danmu',
      autoplay: 'autoplay',
      loop: 'loop',
      muted: 'muted',
      initialTime: 'initial-time',
      pageGesture: 'page-gesture',
      direction: 'direction',
      showProgress: 'show-progress',
      showFullscreenBtn: 'show-fullscreen-btn',
      showPlayBtn: 'show-play-btn',
      showCenterPlayBtn: 'show-center-play-btn',
      enableProgressGesture: 'enable-progress-gesture',
      objectFit: 'object-fit',
      poster: 'poster',
      showMuteBtn: 'show-mute-btn',
      title: 'title',
      playBtnPosition: 'play-btn-position',
      posterForCrawler: 'poster-for-crawler',
      enablePlayGesture: 'enable-play-gesture',
      autoPauseIfNavigate: 'auto-pause-if-navigate',
      autoPauseIfOpenNative: 'auto-pause-if-open-native',
      vslideGesture: 'vslide-gesture',
      vslideGestureInFullscreen: 'vslide-gesture-in-fullscreen',
      onPlay: 'bindplay',
      onPause: 'bindpause',
      onEnded: 'bindended',
      onTimeUpdate: 'bindtimeupdate',
      onFullScreenChange: 'bindfullscreenchange',
      onWaiting: 'bindwaiting',
      onError: 'binderror',
      onProgress: 'bindprogress',
      animation: 'animation',
    },
    props: [
      'id',
      'class',
      'style',
      'src',
      'duration',
      'controls',
      'danmu-list',
      'danmu-btn',
      'enable-danmu',
      'autoplay',
      'loop',
      'muted',
      'initial-time',
      'page-gesture',
      'direction',
      'show-progress',
      'show-fullscreen-btn',
      'show-play-btn',
      'show-center-play-btn',
      'enable-progress-gesture',
      'object-fit',
      'poster',
      'show-mute-btn',
      'title',
      'play-btn-position',
      'poster-for-crawler',
      'enable-play-gesture',
      'auto-pause-if-navigate',
      'auto-pause-if-open-native',
      'vslide-gesture',
      'vslide-gesture-in-fullscreen',
      'bindplay',
      'bindpause',
      'bindended',
      'bindtimeupdate',
      'bindfullscreenchange',
      'bindwaiting',
      'binderror',
      'bindprogress',
      'animation',
    ],
  },
  view: {
    alias: {
      id: 'id',
      disableScroll: 'disable-scroll',
      hoverClass: 'hover-class',
      hoverClassName: 'hover-class',
      hoverStartTime: 'hover-start-time',
      hoverStayTime: 'hover-stay-time',
      hidden: 'hidden',
      className: 'class',
      style: 'style',
      animation: 'animation',
      hoverStopPropagation: 'hover-stop-propagation',
      onTap: 'bindtap',
      onClick: 'bindtap',
      onTouchStart: 'bindtouchstart',
      onTouchMove: 'bindtouchmove',
      onTouchEnd: 'bindtouchend',
      onTouchCancel: 'bindtouchcancel',
      onLongTap: 'bindlongtap',
      onLongClick: 'bindlongtap',
      onTransitionEnd: 'bindtransitionend',
      onAnimationIteration: 'bindanimationiteration',
      onAnimationStart: 'bindanimationstart',
      onAnimationEnd: 'bindanimationend',
    },
    props: [
      'id',
      'disable-scroll',
      'hover-class',
      'hover-class',
      'hover-start-time',
      'hover-stay-time',
      'hidden',
      'class',
      'style',
      'animation',
      'hover-stop-propagation',
      'bindtap',
      'bindtap',
      'bindtouchstart',
      'bindtouchmove',
      'bindtouchend',
      'bindtouchcancel',
      'bindlongtap',
      'bindlongtap',
      'bindtransitionend',
      'bindanimationiteration',
      'bindanimationstart',
      'bindanimationend',
    ],
  },
  'web-view': {
    alias: {
      src: 'src',
      onMessage: 'bindmessage',
      onLoad: 'bindload',
      onError: 'binderror',
    },
    props: ['src', 'bindmessage', 'bindload', 'binderror'],
  },
};
